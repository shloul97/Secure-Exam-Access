{"version":3,"file":"distrpute.min.js","sources":["../src/distrpute.js"],"sourcesContent":["define(['jquery', 'core/ajax'], function ($, Ajax) {\n    'use strict';\n    return {\n        init: function () {\n\n\n            // -------- Form Submit\n            $('.mform').submit(function (e) {\n                e.preventDefault();\n\n                var data = $(this).serializeArray();\n                var labs = [];\n\n                $(this).find('input[name=\"labs[]\"]:checked').each(function () {\n                    labs.push($(this).val());\n                });\n\n                if (data.length <= 3) {\n                    alert(\"Please Select Course and Labs\");\n                    return;\n                }\n\n                var usersArgs = {\n                    courseid: parseInt(data[2].value),\n                    labs: labs\n                };\n\n                Ajax.call([{\n                    methodname: 'local_secureaccess_get_users',\n                    args: usersArgs\n                }])[0].then(function (res) {\n                    var msgDiv = $('.msg-div');\n                    msgDiv.removeClass('msg-err msg-success');\n\n                    if (res.status === 0) {\n                        msgDiv.html(res.message).addClass('msg-err').fadeIn(200);\n                    } else {\n                        msgDiv.html(res.message).addClass('msg-success').fadeIn(200);\n                    }\n                }).catch(function (err) {\n                    let fullError = `\n                                    <div style=\"color:red;\">\n                                        <strong>AJAX Error:</strong><br>\n                                        Message: ${err.message || 'N/A'}<br>\n                                        Status: ${err.status || 'N/A'}<br>\n                                        Status Text: ${err.statusText || 'N/A'}<br>\n                                        Response: ${err.responseText || JSON.stringify(err)}<br>\n                                        Arguments: ${JSON.stringify(usersArgs)}\n                                    </div>\n                                `;\n                    $('#ajx-err').html(fullError);\n                });\n\n            });\n\n            // -------- Course Change\n            $('input[name=course]').change(function () {\n                var val = parseInt($(this).val());\n\n                // Quizes\n                var quizesArgs = {\n                    courseid: val\n                };\n                Ajax.call([{\n                    methodname: 'local_secureaccess_get_quizes',\n                    args: quizesArgs\n                }])[0].then(function (res) {\n                    let html = '';\n                    if (res.status == 1) {\n                        $.each(res.message, function (index, value) {\n                            html += `<div class=\"form-check form-check-inline\" data-id=\"${index}\">\n                                <input class=\"form-check-input\" name=\"quizes[]\" type=\"checkbox\"\n                                id=\"checkbox${value.id}\" value=\"${value.id}\">\n                                <label class=\"form-check-label\" for=\"checkbox${value.id}\">${value.name}</label>\n                            </div>`;\n                        });\n                        $('#quizes-div').html(html);\n                    }\n\n                }).catch(function (err) {\n                    let fullError = `\n                                    <div style=\"color:red;\">\n                                        <strong>AJAX Error:</strong><br>\n                                        Message: ${err.message || 'N/A'}<br>\n                                        Status: ${err.status || 'N/A'}<br>\n                                        Status Text: ${err.statusText || 'N/A'}<br>\n                                        Response: ${err.responseText || JSON.stringify(err)}<br>\n                                        Arguments: ${JSON.stringify(quizesArgs)}\n                                    </div>\n                                `;\n                    $('#ajx-err').html(fullError);\n                });\n            });\n\n\n        }\n    };\n});"],"names":["define","$","Ajax","init","submit","e","preventDefault","data","this","serializeArray","labs","find","each","push","val","length","alert","usersArgs","courseid","parseInt","value","call","methodname","args","then","res","msgDiv","removeClass","status","html","message","addClass","fadeIn","catch","err","fullError","statusText","responseText","JSON","stringify","change","quizesArgs","index","id","name"],"mappings":"AAAAA,sCAAO,CAAC,SAAU,cAAc,SAAUC,EAAGC,YAElC,CACHC,KAAM,WAIFF,EAAE,UAAUG,QAAO,SAAUC,GACzBA,EAAEC,qBAEEC,KAAON,EAAEO,MAAMC,iBACfC,KAAO,MAEXT,EAAEO,MAAMG,KAAK,gCAAgCC,MAAK,WAC9CF,KAAKG,KAAKZ,EAAEO,MAAMM,UAGlBP,KAAKQ,QAAU,EACfC,MAAM,0CAINC,UAAY,CACZC,SAAUC,SAASZ,KAAK,GAAGa,OAC3BV,KAAMA,MAGVR,KAAKmB,KAAK,CAAC,CACPC,WAAY,+BACZC,KAAMN,aACN,GAAGO,MAAK,SAAUC,SACdC,OAASzB,EAAE,YACfyB,OAAOC,YAAY,uBAEA,IAAfF,IAAIG,OACJF,OAAOG,KAAKJ,IAAIK,SAASC,SAAS,WAAWC,OAAO,KAEpDN,OAAOG,KAAKJ,IAAIK,SAASC,SAAS,eAAeC,OAAO,QAE7DC,OAAM,SAAUC,SACXC,+MAG2BD,IAAIJ,SAAW,uEAChBI,IAAIN,QAAU,4EACTM,IAAIE,YAAc,yEACrBF,IAAIG,cAAgBC,KAAKC,UAAUL,yEAClCI,KAAKC,UAAUtB,6FAGhDhB,EAAE,YAAY4B,KAAKM,kBAM3BlC,EAAE,sBAAsBuC,QAAO,eAIvBC,WAAa,CACbvB,SAJMC,SAASlB,EAAEO,MAAMM,QAM3BZ,KAAKmB,KAAK,CAAC,CACPC,WAAY,gCACZC,KAAMkB,cACN,GAAGjB,MAAK,SAAUC,SACdI,KAAO,GACO,GAAdJ,IAAIG,SACJ3B,EAAEW,KAAKa,IAAIK,SAAS,SAAUY,MAAOtB,OACjCS,mEAA8Da,kKAE5CtB,MAAMuB,uBAAcvB,MAAMuB,+FACOvB,MAAMuB,gBAAOvB,MAAMwB,wDAG1E3C,EAAE,eAAe4B,KAAKA,UAG3BI,OAAM,SAAUC,SACXC,+MAG2BD,IAAIJ,SAAW,uEAChBI,IAAIN,QAAU,4EACTM,IAAIE,YAAc,yEACrBF,IAAIG,cAAgBC,KAAKC,UAAUL,yEAClCI,KAAKC,UAAUE,8FAGhDxC,EAAE,YAAY4B,KAAKM"}